program = "%" decllist " " cmpdstmt "%"

decllist = declaration | declaration ";" decllist

declaration = "let" type IDENTIFIER                                  

type1 = "bool" | "int" | "string" | "char"                         

arraydecl = type1 "array" "[" nr "]"                               

type  = type1|arraydecl                                                  

cmpdstmt = "{" stmtlist "}"                                              

stmtlist = stmt | stmt ";" stmtlist                                      

stmt = simplstmt | structstmt                                            

simplstmt = assignstmt | iostmt                                          

assignstmt = IDENTIFIER "=" expression                                   

expression = expression ("+"|"-"|"||") term | term                             

term = term ("*"|"&&"|"/"|"%") factor | factor                                          

factor = "(" expression ")" | IDENTIFIER                                 

iostmt = "READ" "(" IDENTIFIER ")" | "WRITE" "(" IDENTIFIER ")"          

structstmt = cmpdstmt | ifstmt | whilestmt | forstmt                                

ifstmt = "IF" condition "THEN" stmt ["ELSE" cmpdstmt]                        

whilestmt = "WHILE" condition "DO" cmpdstmt      

forstmt = "FOR" assignstmt "AS LONG AS" condition "WITH" assignstmt "DO" cmpdstmt                          

condition = expression RELATION expression | expression RELATION expression && condition                               

RELATION = "<" | "<=" | "==" | "!=" | ">=" | ">"  

logicalop="&&" | "||"       